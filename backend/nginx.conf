upstream eona_backend {
server 127.0.0.1:8000;
# Add more backend servers for load balancing
# server 127.0.0.1:8001;
# server 127.0.0.1:8002;
}

server {
listen 80;
server_name your-domain.com;

# Redirect HTTP to HTTPS
return 301 https://$server_name$request_uri;

}

server {
listen 443 ssl http2;
server_name your-domain.com;

# SSL configuration
# ssl_certificate /path/to/your/certificate.pem;
# ssl_certificate_key /path/to/your/private.key;
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers HIGH:!aNULL:!MD5;

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

location /api/ {
    limit_req zone=api burst=20 nodelay;
    
    proxy_pass http://eona_backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeout settings
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Buffer settings for large requests
    client_max_body_size 10M;
    proxy_buffer_size 16k;
    proxy_buffers 8 16k;
}

# Health check endpoint
location /health {
    access_log off;
    proxy_pass http://eona_backend/api/v1/health;
}

# Security headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header X-Content-Type-Options "nosniff" always;
add_header Referrer-Policy "no-referrer-when-downgrade" always;
add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

}